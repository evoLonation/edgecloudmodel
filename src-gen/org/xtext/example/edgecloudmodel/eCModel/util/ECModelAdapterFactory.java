/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.edgecloudmodel.eCModel.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.example.edgecloudmodel.eCModel.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.edgecloudmodel.eCModel.ECModelPackage
 * @generated
 */
public class ECModelAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ECModelPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ECModelAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = ECModelPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ECModelSwitch<Adapter> modelSwitch =
    new ECModelSwitch<Adapter>()
    {
      @Override
      public Adapter caseRequirementModel(RequirementModel object)
      {
        return createRequirementModelAdapter();
      }
      @Override
      public Adapter caseInteraction(Interaction object)
      {
        return createInteractionAdapter();
      }
      @Override
      public Adapter caseMessage(Message object)
      {
        return createMessageAdapter();
      }
      @Override
      public Adapter caseCallMessage(CallMessage object)
      {
        return createCallMessageAdapter();
      }
      @Override
      public Adapter caseReturnMessage(ReturnMessage object)
      {
        return createReturnMessageAdapter();
      }
      @Override
      public Adapter caseExecution(Execution object)
      {
        return createExecutionAdapter();
      }
      @Override
      public Adapter caseCombinedFragment(CombinedFragment object)
      {
        return createCombinedFragmentAdapter();
      }
      @Override
      public Adapter caseOperand(Operand object)
      {
        return createOperandAdapter();
      }
      @Override
      public Adapter caseAbstractEnd(AbstractEnd object)
      {
        return createAbstractEndAdapter();
      }
      @Override
      public Adapter caseMixEnd(MixEnd object)
      {
        return createMixEndAdapter();
      }
      @Override
      public Adapter caseMixOpAndCFEnd(MixOpAndCFEnd object)
      {
        return createMixOpAndCFEndAdapter();
      }
      @Override
      public Adapter caseMessageEnd(MessageEnd object)
      {
        return createMessageEndAdapter();
      }
      @Override
      public Adapter caseMultiEnd(MultiEnd object)
      {
        return createMultiEndAdapter();
      }
      @Override
      public Adapter caseExecutionEnd(ExecutionEnd object)
      {
        return createExecutionEndAdapter();
      }
      @Override
      public Adapter caseCombinedFragmentEnd(CombinedFragmentEnd object)
      {
        return createCombinedFragmentEndAdapter();
      }
      @Override
      public Adapter caseOperandEnd(OperandEnd object)
      {
        return createOperandEndAdapter();
      }
      @Override
      public Adapter caseDomainModel(DomainModel object)
      {
        return createDomainModelAdapter();
      }
      @Override
      public Adapter caseUseCaseModel(UseCaseModel object)
      {
        return createUseCaseModelAdapter();
      }
      @Override
      public Adapter caseActor(Actor object)
      {
        return createActorAdapter();
      }
      @Override
      public Adapter caseUC(UC object)
      {
        return createUCAdapter();
      }
      @Override
      public Adapter caseService(Service object)
      {
        return createServiceAdapter();
      }
      @Override
      public Adapter caseParticipant(Participant object)
      {
        return createParticipantAdapter();
      }
      @Override
      public Adapter caseWorkflow(Workflow object)
      {
        return createWorkflowAdapter();
      }
      @Override
      public Adapter casePartition(Partition object)
      {
        return createPartitionAdapter();
      }
      @Override
      public Adapter caseWorkflowExp(WorkflowExp object)
      {
        return createWorkflowExpAdapter();
      }
      @Override
      public Adapter casePartitionAction(PartitionAction object)
      {
        return createPartitionActionAdapter();
      }
      @Override
      public Adapter caseJoinExp(JoinExp object)
      {
        return createJoinExpAdapter();
      }
      @Override
      public Adapter caseActivityFinal(ActivityFinal object)
      {
        return createActivityFinalAdapter();
      }
      @Override
      public Adapter caseInitalNode(InitalNode object)
      {
        return createInitalNodeAdapter();
      }
      @Override
      public Adapter caseForkNode(ForkNode object)
      {
        return createForkNodeAdapter();
      }
      @Override
      public Adapter caseJoinNode(JoinNode object)
      {
        return createJoinNodeAdapter();
      }
      @Override
      public Adapter caseComplexOpeartion(ComplexOpeartion object)
      {
        return createComplexOpeartionAdapter();
      }
      @Override
      public Adapter caseSimpleOperation(SimpleOperation object)
      {
        return createSimpleOperationAdapter();
      }
      @Override
      public Adapter caseLoopExp(LoopExp object)
      {
        return createLoopExpAdapter();
      }
      @Override
      public Adapter caseSwitchExp(SwitchExp object)
      {
        return createSwitchExpAdapter();
      }
      @Override
      public Adapter caseSwitchCase(SwitchCase object)
      {
        return createSwitchCaseAdapter();
      }
      @Override
      public Adapter caseSwitchDefault(SwitchDefault object)
      {
        return createSwitchDefaultAdapter();
      }
      @Override
      public Adapter caseOperation(Operation object)
      {
        return createOperationAdapter();
      }
      @Override
      public Adapter caseParameter(Parameter object)
      {
        return createParameterAdapter();
      }
      @Override
      public Adapter caseEntity(Entity object)
      {
        return createEntityAdapter();
      }
      @Override
      public Adapter caseAttribute(Attribute object)
      {
        return createAttributeAdapter();
      }
      @Override
      public Adapter caseReference(Reference object)
      {
        return createReferenceAdapter();
      }
      @Override
      public Adapter caseTypeCS(TypeCS object)
      {
        return createTypeCSAdapter();
      }
      @Override
      public Adapter caseInvariance(Invariance object)
      {
        return createInvarianceAdapter();
      }
      @Override
      public Adapter caseEntityType(EntityType object)
      {
        return createEntityTypeAdapter();
      }
      @Override
      public Adapter caseEnumEntity(EnumEntity object)
      {
        return createEnumEntityAdapter();
      }
      @Override
      public Adapter caseEnumItem(EnumItem object)
      {
        return createEnumItemAdapter();
      }
      @Override
      public Adapter caseContract(Contract object)
      {
        return createContractAdapter();
      }
      @Override
      public Adapter caseDefinition(Definition object)
      {
        return createDefinitionAdapter();
      }
      @Override
      public Adapter casePrecondition(Precondition object)
      {
        return createPreconditionAdapter();
      }
      @Override
      public Adapter casePostcondition(Postcondition object)
      {
        return createPostconditionAdapter();
      }
      @Override
      public Adapter caseOCLExpressionCS(OCLExpressionCS object)
      {
        return createOCLExpressionCSAdapter();
      }
      @Override
      public Adapter caseNestedExpCS(NestedExpCS object)
      {
        return createNestedExpCSAdapter();
      }
      @Override
      public Adapter caseLogicFormulaExpCS(LogicFormulaExpCS object)
      {
        return createLogicFormulaExpCSAdapter();
      }
      @Override
      public Adapter caseAtomicExpression(AtomicExpression object)
      {
        return createAtomicExpressionAdapter();
      }
      @Override
      public Adapter caseLeftSubAtomicExpression(LeftSubAtomicExpression object)
      {
        return createLeftSubAtomicExpressionAdapter();
      }
      @Override
      public Adapter caseRightSubAtomicExpression(RightSubAtomicExpression object)
      {
        return createRightSubAtomicExpressionAdapter();
      }
      @Override
      public Adapter caseCallExpCS(CallExpCS object)
      {
        return createCallExpCSAdapter();
      }
      @Override
      public Adapter caseLoopExpCS(LoopExpCS object)
      {
        return createLoopExpCSAdapter();
      }
      @Override
      public Adapter caseIteratorExpCS(IteratorExpCS object)
      {
        return createIteratorExpCSAdapter();
      }
      @Override
      public Adapter caseEntityAttributeName(EntityAttributeName object)
      {
        return createEntityAttributeNameAdapter();
      }
      @Override
      public Adapter caseArgumentsCS(ArgumentsCS object)
      {
        return createArgumentsCSAdapter();
      }
      @Override
      public Adapter caseFeatureCallExpCS(FeatureCallExpCS object)
      {
        return createFeatureCallExpCSAdapter();
      }
      @Override
      public Adapter caseStandardNavigationCallExpCS(StandardNavigationCallExpCS object)
      {
        return createStandardNavigationCallExpCSAdapter();
      }
      @Override
      public Adapter caseStandardOperationExpCS(StandardOperationExpCS object)
      {
        return createStandardOperationExpCSAdapter();
      }
      @Override
      public Adapter casePredefineOp(PredefineOp object)
      {
        return createPredefineOpAdapter();
      }
      @Override
      public Adapter caseStandardNoneParameterOperation(StandardNoneParameterOperation object)
      {
        return createStandardNoneParameterOperationAdapter();
      }
      @Override
      public Adapter caseStandardParameterOperation(StandardParameterOperation object)
      {
        return createStandardParameterOperationAdapter();
      }
      @Override
      public Adapter caseStandardCollectionOperation(StandardCollectionOperation object)
      {
        return createStandardCollectionOperationAdapter();
      }
      @Override
      public Adapter caseStandardDateOperation(StandardDateOperation object)
      {
        return createStandardDateOperationAdapter();
      }
      @Override
      public Adapter caseClassiferCallExpCS(ClassiferCallExpCS object)
      {
        return createClassiferCallExpCSAdapter();
      }
      @Override
      public Adapter casePropertyCallExpCS(PropertyCallExpCS object)
      {
        return createPropertyCallExpCSAdapter();
      }
      @Override
      public Adapter caseOperationCallExpCS(OperationCallExpCS object)
      {
        return createOperationCallExpCSAdapter();
      }
      @Override
      public Adapter caseOperationParameters(OperationParameters object)
      {
        return createOperationParametersAdapter();
      }
      @Override
      public Adapter caseVariableExpCS(VariableExpCS object)
      {
        return createVariableExpCSAdapter();
      }
      @Override
      public Adapter caseIfExpCS(IfExpCS object)
      {
        return createIfExpCSAdapter();
      }
      @Override
      public Adapter caseLetExpCS(LetExpCS object)
      {
        return createLetExpCSAdapter();
      }
      @Override
      public Adapter caseVariableDeclarationCS(VariableDeclarationCS object)
      {
        return createVariableDeclarationCSAdapter();
      }
      @Override
      public Adapter caseLiteralExpCS(LiteralExpCS object)
      {
        return createLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseEnumLiteralExpCS(EnumLiteralExpCS object)
      {
        return createEnumLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseTupleLiteralExpCS(TupleLiteralExpCS object)
      {
        return createTupleLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseTupleTypeCS(TupleTypeCS object)
      {
        return createTupleTypeCSAdapter();
      }
      @Override
      public Adapter caseCollectionTypeCS(CollectionTypeCS object)
      {
        return createCollectionTypeCSAdapter();
      }
      @Override
      public Adapter caseCollectionLiteralExpCS(CollectionLiteralExpCS object)
      {
        return createCollectionLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseCollectionLiteralPartCS(CollectionLiteralPartCS object)
      {
        return createCollectionLiteralPartCSAdapter();
      }
      @Override
      public Adapter caseCollectionRangeCS(CollectionRangeCS object)
      {
        return createCollectionRangeCSAdapter();
      }
      @Override
      public Adapter caseCollectionItem(CollectionItem object)
      {
        return createCollectionItemAdapter();
      }
      @Override
      public Adapter casePrimitiveLiteralExpCS(PrimitiveLiteralExpCS object)
      {
        return createPrimitiveLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseNumberLiteralExpCS(NumberLiteralExpCS object)
      {
        return createNumberLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseBooleanLiteralExpCS(BooleanLiteralExpCS object)
      {
        return createBooleanLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseStringLiteralExpCS(StringLiteralExpCS object)
      {
        return createStringLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseNullLiteralExpCS(NullLiteralExpCS object)
      {
        return createNullLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseInvalidLiteralExpCS(InvalidLiteralExpCS object)
      {
        return createInvalidLiteralExpCSAdapter();
      }
      @Override
      public Adapter caseReservedKeywordCS(ReservedKeywordCS object)
      {
        return createReservedKeywordCSAdapter();
      }
      @Override
      public Adapter caseCollectionTypeIdentifierCS(CollectionTypeIdentifierCS object)
      {
        return createCollectionTypeIdentifierCSAdapter();
      }
      @Override
      public Adapter casePrimitiveTypeCS(PrimitiveTypeCS object)
      {
        return createPrimitiveTypeCSAdapter();
      }
      @Override
      public Adapter caseOclTypeCS(OclTypeCS object)
      {
        return createOclTypeCSAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.RequirementModel <em>Requirement Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.RequirementModel
   * @generated
   */
  public Adapter createRequirementModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Interaction <em>Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Interaction
   * @generated
   */
  public Adapter createInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Message <em>Message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Message
   * @generated
   */
  public Adapter createMessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CallMessage <em>Call Message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CallMessage
   * @generated
   */
  public Adapter createCallMessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ReturnMessage <em>Return Message</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ReturnMessage
   * @generated
   */
  public Adapter createReturnMessageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Execution <em>Execution</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Execution
   * @generated
   */
  public Adapter createExecutionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CombinedFragment <em>Combined Fragment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CombinedFragment
   * @generated
   */
  public Adapter createCombinedFragmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Operand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Operand
   * @generated
   */
  public Adapter createOperandAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.AbstractEnd <em>Abstract End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.AbstractEnd
   * @generated
   */
  public Adapter createAbstractEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.MixEnd <em>Mix End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.MixEnd
   * @generated
   */
  public Adapter createMixEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.MixOpAndCFEnd <em>Mix Op And CF End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.MixOpAndCFEnd
   * @generated
   */
  public Adapter createMixOpAndCFEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.MessageEnd <em>Message End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.MessageEnd
   * @generated
   */
  public Adapter createMessageEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.MultiEnd <em>Multi End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.MultiEnd
   * @generated
   */
  public Adapter createMultiEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ExecutionEnd <em>Execution End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ExecutionEnd
   * @generated
   */
  public Adapter createExecutionEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CombinedFragmentEnd <em>Combined Fragment End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CombinedFragmentEnd
   * @generated
   */
  public Adapter createCombinedFragmentEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.OperandEnd <em>Operand End</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.OperandEnd
   * @generated
   */
  public Adapter createOperandEndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.DomainModel <em>Domain Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.DomainModel
   * @generated
   */
  public Adapter createDomainModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.UseCaseModel <em>Use Case Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.UseCaseModel
   * @generated
   */
  public Adapter createUseCaseModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Actor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Actor
   * @generated
   */
  public Adapter createActorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.UC <em>UC</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.UC
   * @generated
   */
  public Adapter createUCAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Service <em>Service</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Service
   * @generated
   */
  public Adapter createServiceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Participant <em>Participant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Participant
   * @generated
   */
  public Adapter createParticipantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Workflow <em>Workflow</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Workflow
   * @generated
   */
  public Adapter createWorkflowAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Partition <em>Partition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Partition
   * @generated
   */
  public Adapter createPartitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.WorkflowExp <em>Workflow Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.WorkflowExp
   * @generated
   */
  public Adapter createWorkflowExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.PartitionAction <em>Partition Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.PartitionAction
   * @generated
   */
  public Adapter createPartitionActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.JoinExp <em>Join Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.JoinExp
   * @generated
   */
  public Adapter createJoinExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ActivityFinal <em>Activity Final</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ActivityFinal
   * @generated
   */
  public Adapter createActivityFinalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.InitalNode <em>Inital Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.InitalNode
   * @generated
   */
  public Adapter createInitalNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ForkNode <em>Fork Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ForkNode
   * @generated
   */
  public Adapter createForkNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.JoinNode <em>Join Node</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.JoinNode
   * @generated
   */
  public Adapter createJoinNodeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ComplexOpeartion <em>Complex Opeartion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ComplexOpeartion
   * @generated
   */
  public Adapter createComplexOpeartionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.SimpleOperation <em>Simple Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.SimpleOperation
   * @generated
   */
  public Adapter createSimpleOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LoopExp <em>Loop Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LoopExp
   * @generated
   */
  public Adapter createLoopExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.SwitchExp <em>Switch Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.SwitchExp
   * @generated
   */
  public Adapter createSwitchExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.SwitchCase <em>Switch Case</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.SwitchCase
   * @generated
   */
  public Adapter createSwitchCaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.SwitchDefault <em>Switch Default</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.SwitchDefault
   * @generated
   */
  public Adapter createSwitchDefaultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Operation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Operation
   * @generated
   */
  public Adapter createOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Parameter
   * @generated
   */
  public Adapter createParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Entity
   * @generated
   */
  public Adapter createEntityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Attribute
   * @generated
   */
  public Adapter createAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Reference <em>Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Reference
   * @generated
   */
  public Adapter createReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.TypeCS <em>Type CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.TypeCS
   * @generated
   */
  public Adapter createTypeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Invariance <em>Invariance</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Invariance
   * @generated
   */
  public Adapter createInvarianceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.EntityType <em>Entity Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.EntityType
   * @generated
   */
  public Adapter createEntityTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.EnumEntity <em>Enum Entity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.EnumEntity
   * @generated
   */
  public Adapter createEnumEntityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.EnumItem <em>Enum Item</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.EnumItem
   * @generated
   */
  public Adapter createEnumItemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Contract <em>Contract</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Contract
   * @generated
   */
  public Adapter createContractAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Definition
   * @generated
   */
  public Adapter createDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Precondition <em>Precondition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Precondition
   * @generated
   */
  public Adapter createPreconditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.Postcondition <em>Postcondition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.Postcondition
   * @generated
   */
  public Adapter createPostconditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.OCLExpressionCS <em>OCL Expression CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.OCLExpressionCS
   * @generated
   */
  public Adapter createOCLExpressionCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.NestedExpCS <em>Nested Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.NestedExpCS
   * @generated
   */
  public Adapter createNestedExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LogicFormulaExpCS <em>Logic Formula Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LogicFormulaExpCS
   * @generated
   */
  public Adapter createLogicFormulaExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.AtomicExpression <em>Atomic Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.AtomicExpression
   * @generated
   */
  public Adapter createAtomicExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LeftSubAtomicExpression <em>Left Sub Atomic Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LeftSubAtomicExpression
   * @generated
   */
  public Adapter createLeftSubAtomicExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.RightSubAtomicExpression <em>Right Sub Atomic Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.RightSubAtomicExpression
   * @generated
   */
  public Adapter createRightSubAtomicExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CallExpCS <em>Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CallExpCS
   * @generated
   */
  public Adapter createCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LoopExpCS <em>Loop Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LoopExpCS
   * @generated
   */
  public Adapter createLoopExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.IteratorExpCS <em>Iterator Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.IteratorExpCS
   * @generated
   */
  public Adapter createIteratorExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.EntityAttributeName <em>Entity Attribute Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.EntityAttributeName
   * @generated
   */
  public Adapter createEntityAttributeNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ArgumentsCS <em>Arguments CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ArgumentsCS
   * @generated
   */
  public Adapter createArgumentsCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.FeatureCallExpCS <em>Feature Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.FeatureCallExpCS
   * @generated
   */
  public Adapter createFeatureCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardNavigationCallExpCS <em>Standard Navigation Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardNavigationCallExpCS
   * @generated
   */
  public Adapter createStandardNavigationCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardOperationExpCS <em>Standard Operation Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardOperationExpCS
   * @generated
   */
  public Adapter createStandardOperationExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.PredefineOp <em>Predefine Op</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.PredefineOp
   * @generated
   */
  public Adapter createPredefineOpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardNoneParameterOperation <em>Standard None Parameter Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardNoneParameterOperation
   * @generated
   */
  public Adapter createStandardNoneParameterOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardParameterOperation <em>Standard Parameter Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardParameterOperation
   * @generated
   */
  public Adapter createStandardParameterOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardCollectionOperation <em>Standard Collection Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardCollectionOperation
   * @generated
   */
  public Adapter createStandardCollectionOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StandardDateOperation <em>Standard Date Operation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StandardDateOperation
   * @generated
   */
  public Adapter createStandardDateOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ClassiferCallExpCS <em>Classifer Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ClassiferCallExpCS
   * @generated
   */
  public Adapter createClassiferCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.PropertyCallExpCS <em>Property Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.PropertyCallExpCS
   * @generated
   */
  public Adapter createPropertyCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.OperationCallExpCS <em>Operation Call Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.OperationCallExpCS
   * @generated
   */
  public Adapter createOperationCallExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.OperationParameters <em>Operation Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.OperationParameters
   * @generated
   */
  public Adapter createOperationParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.VariableExpCS <em>Variable Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.VariableExpCS
   * @generated
   */
  public Adapter createVariableExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.IfExpCS <em>If Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.IfExpCS
   * @generated
   */
  public Adapter createIfExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LetExpCS <em>Let Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LetExpCS
   * @generated
   */
  public Adapter createLetExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.VariableDeclarationCS <em>Variable Declaration CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.VariableDeclarationCS
   * @generated
   */
  public Adapter createVariableDeclarationCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.LiteralExpCS <em>Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.LiteralExpCS
   * @generated
   */
  public Adapter createLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.EnumLiteralExpCS <em>Enum Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.EnumLiteralExpCS
   * @generated
   */
  public Adapter createEnumLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.TupleLiteralExpCS <em>Tuple Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.TupleLiteralExpCS
   * @generated
   */
  public Adapter createTupleLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.TupleTypeCS <em>Tuple Type CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.TupleTypeCS
   * @generated
   */
  public Adapter createTupleTypeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionTypeCS <em>Collection Type CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionTypeCS
   * @generated
   */
  public Adapter createCollectionTypeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionLiteralExpCS <em>Collection Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionLiteralExpCS
   * @generated
   */
  public Adapter createCollectionLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionLiteralPartCS <em>Collection Literal Part CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionLiteralPartCS
   * @generated
   */
  public Adapter createCollectionLiteralPartCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionRangeCS <em>Collection Range CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionRangeCS
   * @generated
   */
  public Adapter createCollectionRangeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionItem <em>Collection Item</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionItem
   * @generated
   */
  public Adapter createCollectionItemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.PrimitiveLiteralExpCS <em>Primitive Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.PrimitiveLiteralExpCS
   * @generated
   */
  public Adapter createPrimitiveLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.NumberLiteralExpCS <em>Number Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.NumberLiteralExpCS
   * @generated
   */
  public Adapter createNumberLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.BooleanLiteralExpCS <em>Boolean Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.BooleanLiteralExpCS
   * @generated
   */
  public Adapter createBooleanLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.StringLiteralExpCS <em>String Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.StringLiteralExpCS
   * @generated
   */
  public Adapter createStringLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.NullLiteralExpCS <em>Null Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.NullLiteralExpCS
   * @generated
   */
  public Adapter createNullLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.InvalidLiteralExpCS <em>Invalid Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.InvalidLiteralExpCS
   * @generated
   */
  public Adapter createInvalidLiteralExpCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.ReservedKeywordCS <em>Reserved Keyword CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.ReservedKeywordCS
   * @generated
   */
  public Adapter createReservedKeywordCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.CollectionTypeIdentifierCS <em>Collection Type Identifier CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.CollectionTypeIdentifierCS
   * @generated
   */
  public Adapter createCollectionTypeIdentifierCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.PrimitiveTypeCS <em>Primitive Type CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.PrimitiveTypeCS
   * @generated
   */
  public Adapter createPrimitiveTypeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.edgecloudmodel.eCModel.OclTypeCS <em>Ocl Type CS</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.edgecloudmodel.eCModel.OclTypeCS
   * @generated
   */
  public Adapter createOclTypeCSAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //ECModelAdapterFactory
